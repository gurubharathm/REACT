[{"/data/data/com.termux/files/home/guru-react/src/index.js":"1","/data/data/com.termux/files/home/guru-react/src/App.js":"2","/data/data/com.termux/files/home/guru-react/src/reportWebVitals.js":"3","/data/data/com.termux/files/home/guru-react/src/components/login.js":"4","/data/data/com.termux/files/home/guru-react/src/pages/about.js":"5","/data/data/com.termux/files/home/guru-react/src/components/dashboard.js":"6","/data/data/com.termux/files/home/guru-react/src/components/users.js":"7","/data/data/com.termux/files/home/guru-react/src/components/settings.js":"8","/data/data/com.termux/files/home/guru-react/src/components/navbar.js":"9","/data/data/com.termux/files/home/guru-react/src/components/drawer.js":"10","/data/data/com.termux/files/home/guru-react/src/components/toolbar.js":"11"},{"size":534,"mtime":1700019098289,"results":"12","hashOfConfig":"13"},{"size":783,"mtime":1700074708551,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1700019098293,"results":"15","hashOfConfig":"13"},{"size":2232,"mtime":1700019098277,"results":"16","hashOfConfig":"13"},{"size":109,"mtime":1700019098293,"results":"17","hashOfConfig":"13"},{"size":260,"mtime":1700192812736,"results":"18","hashOfConfig":"13"},{"size":2401,"mtime":1700164419640,"results":"19","hashOfConfig":"13"},{"size":185,"mtime":1700107244504,"results":"20","hashOfConfig":"13"},{"size":732,"mtime":1700071222551,"results":"21","hashOfConfig":"13"},{"size":2459,"mtime":1700106974832,"results":"22","hashOfConfig":"13"},{"size":7148,"mtime":1700070929663,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"4ebr0u",{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"27"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"27"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"27"},"/data/data/com.termux/files/home/guru-react/src/index.js",[],[],["62","63","64","65","66","67"],"/data/data/com.termux/files/home/guru-react/src/App.js",[],[],"/data/data/com.termux/files/home/guru-react/src/reportWebVitals.js",[],[],"/data/data/com.termux/files/home/guru-react/src/components/login.js",[],[],"/data/data/com.termux/files/home/guru-react/src/pages/about.js",[],[],"/data/data/com.termux/files/home/guru-react/src/components/dashboard.js",["68","69"],[],"import React from \"react\";\nimport Navbar from '../components/navbar';\nimport { PieChart, pieArcLabelClasses } from '@mui/x-charts/PieChart';\n\nconst Dashboard = () => {\n  return (\n    <>\n    <Navbar /> <h1> Dashboard </h1> < />\n  );\n};\nexport default Dashboard;","/data/data/com.termux/files/home/guru-react/src/components/users.js",["70","71"],[],"import React from \"react\";\nimport axios from \"axios\";\nimport Navbar from '../components/navbar';\nimport Avatar from \"@mui/material/Avatar\";\n\nimport {\n  useEffect,\n  useState\n} from \"react\";\nimport { DataGrid } from '@mui/x-data-grid';\nconst baseURL = \"https://dummyjson.com/users\";\n\nconst Users = () => {\nconst columns = [\n  { field: 'id', headerName: 'ID', width: 90 },\n    {\n    field: 'image',\n    headerName: 'Image',\n    description: 'This column has a value getter and is not sortable.',\n    sortable: false,\n    width: 160,\n    //valueGetter: (params) =>`<img src=\"{${params.row.image}\"/>}`,\n      renderCell: (params) => {\n        return (\n          <>\n            <Avatar src={params.value} />\n            {params.image}\n          </>\n        );\n      }\n  },\n  { field: 'username', headerName: 'Username', width: 150 },\n  { field: 'email', headerName: 'Email', width: 150 },\n  {\n    field: 'age',\n    headerName: 'Age',\n    //type: 'number',\n    width: 100,\n  },\n  {\n    field: 'firstName',\n    headerName: 'Full Name',\n    description: 'This column has a value getter and is not sortable.',\n    sortable: false,\n    width: 160,\n    valueGetter: (params) =>\n      `${params.row.firstName || ''} ${params.row.lastName || ''}`,\n  },\n];\n\n  const [users,\n    setUsers] = React.useState(null);\n  const [loading,\n    setLoading] = useState(false)\n  React.useEffect(() => {\n    axios.get(baseURL).then((response) => {\n      setLoading(false);\n      setUsers(response.data.users);\n    });\n  }, []);\n\n  if (!users) return null;\n  return (\n    <>\n\n    <Navbar /> <h1>Users</h1>\n    \n    <table style={{\"display\":\"none\"}}>\n    <tr>\n              <th>Name</th>\n              <th>Username</th>\n              <th>Firstname</th>\n                <th>Email</th>\n                  <th>Phone</th>\n            </tr>\n            {users.map(user => (\n        <tr key={user.id}>\n<td>{user.id}</td>\n<td>{user.username}</td>\n<td>{user.firstName}</td>\n<td>{user.email}</td>\n<td>{user.phone}</td>\n              </tr>\n      ))}\n    </table>\n    \n    <div style={{ height: 640, width: '100%' }}>\n      <DataGrid\n        rows={users}\n        columns={columns}\n        initialState={{\n          pagination: {\n            paginationModel: { page: 0, pageSize: 10 },\n          },\n        }}\n        pageSizeOptions={[5, 10]}\n        checkboxSelection\n      />\n    </div>\n    \n    \n    \n    < / >\n  );\n};\nexport default Users;","/data/data/com.termux/files/home/guru-react/src/components/settings.js",[],[],"/data/data/com.termux/files/home/guru-react/src/components/navbar.js",[],[],"/data/data/com.termux/files/home/guru-react/src/components/drawer.js",["72","73"],[],"import React from \"react\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport {\n  Link\n} from 'react-router-dom';\nimport {\n  useHistory\n} from \"react-router-dom\";\n\n\nimport {\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Divider\n} from \"@material-ui/core\";\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\nimport MailIcon from \"@material-ui/icons/Mail\";\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\nimport PersonIcon from \"@material-ui/icons/Person\";\n\nimport SettingsIcon from \"@material-ui/icons/Settings\";\n\nconst styles = theme => ({\n  list: {\n    width: 250\n  },\n  fullList: {\n    width: \"auto\"\n  },\n  sideNav: {\n    marginTop: '-60px',\n    zIndex: 3,\n    marginLeft: '0px',\n    position: 'fixed',\n  },\n  link: {\n    color: 'black',\n    textDecoration: 'none',\n  }\n});\n\nclass DrawerComponent extends React.Component {\n  state = {\n    left: false\n  };\n  render() {\n    const {\n      classes\n    } = this.props;\n\n    const sideList = side => (\n      <div\n        class=\"drawer\"\n        role=\"presentation\"\n        onClick={ this.props.toggleDrawerHandler }\n        onKeyDown={ this.props.toggleDrawerHandler }>\n          <List>\n           <Link to=\"/dashboard\">\n          <ListItem>\n          <ListItemIcon><DashboardIcon /></ListItemIcon>\n          <ListItemText primary=\"Dashboard\" />\n          </ListItem>\n          </Link>\n           <Link to=\"/users\">\n          <ListItem>\n          <ListItemIcon><PersonIcon /></ListItemIcon>\n          <ListItemText primary=\"Users\" />\n          </ListItem>\n          </Link>\n                     <Link to=\"/settings\">\n          <ListItem>\n          <ListItemIcon><SettingsIcon /></ListItemIcon>\n          <ListItemText primary=\"Settings\" />\n          </ListItem>\n          </Link>\n          </List>\n          <Divider />\n          <List>\n          {[\"Logout\"].map((text, index) => (\n          <Link to={\"/\"+text.toString().toLowerCase()}>\n          <ListItem button key={text}>\n          <ListItemIcon>\n          {index % 2 === 0 ? <InboxIcon />: <MailIcon />}\n          </ListItemIcon>\n          <ListItemText primary={text} />\n          </ListItem>\n          </Link>\n        ))}\n          </List>\n      </div>\n    );\n\n    return (\n      <Drawer open={this.props.left} onClose={this.props.toggleDrawerHandler}>\n          {sideList(\"left\")}\n          </Drawer>\n    );\n  }\n}\n\nexport default withStyles(styles)(DrawerComponent);","/data/data/com.termux/files/home/guru-react/src/components/toolbar.js",["74"],[],"import React from \"react\";\nimport { fade, makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport Badge from \"@material-ui/core/Badge\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport MailIcon from \"@material-ui/icons/Mail\";\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\nimport MoreIcon from \"@material-ui/icons/MoreVert\";\n\nconst styles = theme => ({\n  grow: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  title: {\n    display: \"none\",\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"block\"\n    }\n  },\n  search: {\n    position: \"relative\",\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    \"&:hover\": {\n      backgroundColor: fade(theme.palette.common.white, 0.25)\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      marginLeft: theme.spacing(3),\n      width: \"auto\"\n    }\n  },\n  searchIcon: {\n    width: theme.spacing(7),\n    height: \"100%\",\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  inputRoot: {\n    color: \"inherit\"\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 7),\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"md\")]: {\n      width: 200\n    }\n  },\n  sectionDesktop: {\n    display: \"none\",\n    [theme.breakpoints.up(\"md\")]: {\n      display: \"flex\"\n    }\n  },\n  sectionMobile: {\n    display: \"flex\",\n    [theme.breakpoints.up(\"md\")]: {\n      display: \"none\"\n    }\n  }\n});\n\nclass ToolbarComponent extends React.Component {\n  state = {\n    achorEl: false,\n    MobileMoreAnchorEl: false\n  };\n\n  handleProfileMenuOpen = event => {\n    this.setState({\n      achorEl: event.currentTarget\n    });\n  };\n\n  handleMobileMenuClose = () => {\n    this.setState({\n      mobileMoreAnchorEl: null\n    });\n  };\n\n  handleMenuClose = () => {\n    this.setState({\n      achorEl: null,\n      mobileMoreAnchorEl: null\n    });\n  };\n\n  handleMobileMenuOpen = event => {\n    this.setState({\n      mobileMoreAnchorEl: event.currentTarget\n    });\n  };\n\n  render() {\n    const { classes } = this.props;\n    const isMenuOpen = Boolean(this.state.anchorEl);\n    const isMobileMenuOpen = Boolean(this.state.mobileMoreAnchorEl);\n\n    const menuId = \"primary-search-account-menu\";\n    const renderMenu = (\n      <Menu\n        anchorEl={this.state.anchorEl}\n        anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n        id={menuId}\n        keepMounted\n        transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n        open={isMenuOpen}\n        onClose={this.handleMenuClose}\n      >\n        <MenuItem onClick={this.handleMenuClose}>Profile</MenuItem>\n        <MenuItem onClick={this.handleMenuClose}>My account</MenuItem>\n      </Menu>\n    );\n\n    const mobileMenuId = \"primary-search-account-menu-mobile\";\n    const renderMobileMenu = (\n      <Menu\n        anchorEl={this.state.mobileMoreAnchorEl}\n        anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n        id={mobileMenuId}\n        keepMounted\n        transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n        open={isMobileMenuOpen}\n        onClose={this.handleMobileMenuClose}\n      >\n        <MenuItem>\n          <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n            <Badge badgeContent={4} color=\"secondary\">\n              <MailIcon />\n            </Badge>\n          </IconButton>\n          <p>Messages</p>\n        </MenuItem>\n        <MenuItem>\n          <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\n            <Badge badgeContent={11} color=\"secondary\">\n              <NotificationsIcon />\n            </Badge>\n          </IconButton>\n          <p>Notifications</p>\n        </MenuItem>\n        <MenuItem onClick={this.handleProfileMenuOpen}>\n          <IconButton\n            aria-label=\"account of current user\"\n            aria-controls=\"primary-search-account-menu\"\n            aria-haspopup=\"true\"\n            color=\"inherit\"\n          >\n            <AccountCircle />\n          </IconButton>\n          <p>Profile</p>\n        </MenuItem>\n      </Menu>\n    );\n\n    return (\n      <div className={classes.grow}>\n        <AppBar position=\"static\">\n          <Toolbar>\n            <IconButton\n              edge=\"start\"\n              className={classes.menuButton}\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              onClick={this.props.openDrawerHandler}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography className={classes.title} variant=\"h6\" noWrap>\n              Material-UI\n            </Typography>\n            <div className={classes.search}>\n              <div className={classes.searchIcon}>\n                <SearchIcon />\n              </div>\n              <InputBase\n                placeholder=\"Search…\"\n                classes={{\n                  root: classes.inputRoot,\n                  input: classes.inputInput\n                }}\n                inputProps={{ \"aria-label\": \"search\" }}\n              />\n            </div>\n            <div className={classes.grow} />\n            <div className={classes.sectionDesktop}>\n              <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n                <Badge badgeContent={4} color=\"secondary\">\n                  <MailIcon />\n                </Badge>\n              </IconButton>\n              <IconButton\n                aria-label=\"show 17 new notifications\"\n                color=\"inherit\"\n              >\n                <Badge badgeContent={17} color=\"secondary\">\n                  <NotificationsIcon />\n                </Badge>\n              </IconButton>\n              <IconButton\n                edge=\"end\"\n                aria-label=\"account of current user\"\n                aria-controls={menuId}\n                aria-haspopup=\"true\"\n                onClick={this.handleProfileMenuOpen}\n                color=\"inherit\"\n              >\n                <AccountCircle />\n              </IconButton>\n            </div>\n            <div className={classes.sectionMobile}>\n              <IconButton\n                aria-label=\"show more\"\n                aria-controls={mobileMenuId}\n                aria-haspopup=\"true\"\n                onClick={this.handleMobileMenuOpen}\n                color=\"inherit\"\n              >\n                <MoreIcon />\n              </IconButton>\n            </div>\n          </Toolbar>\n        </AppBar>\n        {renderMobileMenu}\n        {renderMenu}\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(ToolbarComponent);\n",{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":3,"column":10,"nodeType":"89","messageId":"90","endLine":3,"endColumn":18},{"ruleId":"87","severity":1,"message":"91","line":3,"column":20,"nodeType":"89","messageId":"90","endLine":3,"endColumn":38},{"ruleId":"87","severity":1,"message":"92","line":7,"column":3,"nodeType":"89","messageId":"90","endLine":7,"endColumn":12},{"ruleId":"87","severity":1,"message":"93","line":53,"column":10,"nodeType":"89","messageId":"90","endLine":53,"endColumn":17},{"ruleId":"87","severity":1,"message":"94","line":8,"column":3,"nodeType":"89","messageId":"90","endLine":8,"endColumn":13},{"ruleId":"87","severity":1,"message":"95","line":51,"column":7,"nodeType":"89","messageId":"90","endLine":51,"endColumn":14},{"ruleId":"87","severity":1,"message":"96","line":2,"column":16,"nodeType":"89","messageId":"90","endLine":2,"endColumn":26},"dot-location",[],"new-parens",[],"no-mixed-operators",[],"no-new-object",["97"],"no-whitespace-before-property",[],"rest-spread-spacing",[],"no-unused-vars","'PieChart' is defined but never used.","Identifier","unusedVar","'pieArcLabelClasses' is defined but never used.","'useEffect' is defined but never used.","'loading' is assigned a value but never used.","'useHistory' is defined but never used.","'classes' is assigned a value but never used.","'makeStyles' is defined but never used.","no-object-constructor"]